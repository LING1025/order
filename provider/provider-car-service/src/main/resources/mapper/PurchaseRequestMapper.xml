<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funtl.myshop.plus.provider.mapper.PurchaseRequestMapper">
  <resultMap id="BaseResultMap" type="com.funtl.myshop.plus.provider.domain.PurchaseRequest">
    <!--@mbg.generated-->
    <!--@Table PurchaseRequest-->
    <id column="PurchaseRequest_Auto" jdbcType="BIGINT" property="purchaseRequestAuto" />
    <result column="Inc_Auto" jdbcType="BIGINT" property="incAuto" />
    <result column="Invoice_Number" jdbcType="VARCHAR" property="invoiceNumber" />
    <result column="RequestUser" jdbcType="BIGINT" property="requestUser" />
    <result column="Request_Type" jdbcType="INTEGER" property="requestType" />
    <result column="RequestDT" jdbcType="TIMESTAMP" property="requestDT" />
    <result column="RequestAmt" jdbcType="DECIMAL" property="requestAmt" />
    <result column="PayRequestAmt" jdbcType="DECIMAL" property="payRequestAmt" />
    <result column="Is_ZJ" jdbcType="INTEGER" property="isZJ" />
    <result column="ZJAmt" jdbcType="DECIMAL" property="zJAmt" />
    <result column="ZJpay_Type" jdbcType="INTEGER" property="zjPayType" />
    <result column="Pay_Type" jdbcType="INTEGER" property="payType" />
    <result column="CyberBank_Type" jdbcType="INTEGER" property="cyBerBankType" />
    <result column="Payee" jdbcType="VARCHAR" property="payee" />
    <result column="Payee_Account" jdbcType="VARCHAR" property="payeeAccount" />
    <result column="BankName" jdbcType="VARCHAR" property="bankName" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="Status" jdbcType="INTEGER" property="status" />
    <result column="Is_RR" jdbcType="INTEGER" property="isRR" />
    <result column="Cuser" jdbcType="BIGINT" property="cuser" />
    <result column="CDT" jdbcType="TIMESTAMP" property="cdt" />
    <result column="Muser" jdbcType="BIGINT" property="muser" />
    <result column="MDT" jdbcType="TIMESTAMP" property="mdt" />
    <result column="LKInc_Auto" jdbcType="BIGINT" property="lKIncAuto" />
    <result column="IsBatch" jdbcType="INTEGER" property="isBatch" />
    <result column="BankType" jdbcType="INTEGER" property="bankType" />
    <result column="InvType" jdbcType="INTEGER" property="invType" />
    <result column="Is_Eas" jdbcType="INTEGER" property="isEas" />
    <result column="CarApplication_Auto" jdbcType="BIGINT" property="carApplicationAuto" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    PurchaseRequest_Auto, Inc_Auto, Invoice_Number, RequestUser, Request_Type, RequestDT,
    RequestAmt, PayRequestAmt, Is_ZJ, ZJAmt, ZJpay_Type, Pay_Type, CyberBank_Type, Payee,
    Payee_Account, BankName, Remark, [Status], Is_RR, Cuser, CDT, Muser, MDT, LKInc_Auto,
    IsBatch, BankType, InvType, Is_Eas,CarApplication_Auto
  </sql>

    <!--根据用车请款人获取公司别-->
  <resultMap id="queryInc" type="com.funtl.myshop.plus.provider.domain.RequestInc">
    <result column="User_Auto" jdbcType="BIGINT" property="userAuto" />
    <result column="Inc_Auto" jdbcType="BIGINT" property="IncAuto" />
    <result column="Org_Auto" jdbcType="BIGINT" property="useDep" />
  </resultMap>
    <select id="selectInc" resultMap="queryInc">
    select
    a.User_Auto
    ,b.Inc_Auto --公司别序号
    ,a.Org_Auto --使用部门
    from
    v_Emp a
    left join DocSystem.dbo.Employee b on b.Account = a.UserName collate Chinese_PRC_CI_AS
    left join Inc c on c.Inc_Auto = b.Inc_Auto
    where a.IsOn=1 and b.[Status]='任用' and a.User_Auto=#{userAuto}
    </select>

  <!--车辆归还：费用列表数据-->
  <resultMap id="queryPurchaseFeeList" type="com.funtl.myshop.plus.provider.domain.PurchaseFeeList">
    <result column="PurchaseRequest_Auto" jdbcType="BIGINT" property="purchaseRequestAuto" />
    <result column="CarApplication_Auto" jdbcType="BIGINT" property="carApplicationAuto" />
    <result column="RequestAmt" jdbcType="DECIMAL" property="requestAmt" />
    <result column="feeTypeName" jdbcType="VARCHAR" property="feeTypeName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="Purchase_Auto" jdbcType="BIGINT" property="purchaseAuto" />
    <result column="Purchase_Remark" jdbcType="VARCHAR" property="purchaseRemark" />
  </resultMap>
    <select id="selectPurchaseFeeList" resultMap="queryPurchaseFeeList">
      select
      pr.PurchaseRequest_Auto
      ,pr.CarApplication_Auto
      ,i.ItemName feeTypeName
      ,pr.RequestAmt
      ,p.start_time
      ,p.end_time
      ,p.Purchase_Auto
      ,p.Purchase_Remark
      from
      PurchaseRequest pr
      left join Purchase p on p.RR_Auto=pr.PurchaseRequest_Auto
      left join ItemCode i on i.Num=p.FeeType and i.ItemType=903
      left join v_Emp v on v.User_Auto = pr.RequestUser
      where
      pr.RequestUser=#{requestUser}
      and CarApplication_Auto=#{carApplicationAuto}
      and pr.Status != -1
      order by pr.PurchaseRequest_Auto desc
    </select>

  <!--获取银行别下拉选数据-->
    <resultMap id="queryBank" type="com.funtl.myshop.plus.provider.domain.BankList">
      <result column="BankType" jdbcType="INTEGER" property="bankType" />
      <result column="BankNameT" jdbcType="VARCHAR" property="bankNameT" />
    </resultMap>
    <select id="selectBank" resultMap="queryBank">
    declare
    @BankNameT varchar(100)=#{bankNameT}
    begin
    select
    BankNameT,cast(BankType as int)BankType
    from
    BankType
    where BankNameT like '%'+@BankNameT+'%'
    order by BankNameT
    end
    </select>

  <!--领款人搜索-->
  <resultMap id="queryLKR" type="com.funtl.myshop.plus.provider.domain.LKRList">
    <result column="LKRName" jdbcType="VARCHAR" property="name" />
    <result column="LKRBank" jdbcType="VARCHAR" property="bank" />
    <result column="LKRAcount" jdbcType="VARCHAR" property="account" />
    <result column="BankNameT" jdbcType="VARCHAR" property="bankNameT" />
    <result column="LKRBankType" jdbcType="INTEGER" property="bankType" />
    <result column="LKR_Total_Auto" jdbcType="BIGINT" property="totalAuto" />
  </resultMap>
  <select id="selectLKR" resultMap="queryLKR">
    declare
    @Type int=#{lkrQueryParam.type},--1领款人名称搜索 2选取时获取
    @LKR_User varchar(100)=#{lkrQueryParam.name},
    @LKR_Total_Auto bigint=#{lkrQueryParam.totalAuto}
    begin
    select
    distinct t1.LKRName,t1.LKRBank,t1.LKRBankType,t1.LKRAcount,BankNameT=isnull(t2.BankNameT,'') ,t1.LKR_Total_Auto
    from LKR_Total t1
    left join BankType t2 on t1.LKRBankType=t2.BankType
    where ((t1.LKRName like '%'+@LKR_User+'%' and @Type=1)
    or (@Type=2 and t1.LKR_Total_Auto=@LKR_Total_Auto)) and t1.IsOn=1
    end
  </select>

  <!--开户行搜索-->
  <resultMap id="queryOpen" type="com.funtl.myshop.plus.provider.domain.OpenList">
    <result column="BankName" jdbcType="VARCHAR" property="bankName" />
    <result column="BankNameT" jdbcType="VARCHAR" property="bankNameT" />
    <result column="BankType" jdbcType="INTEGER" property="bankType" />
    <result column="BankDetail_Auto" jdbcType="BIGINT" property="bankDetailAuto" />
  </resultMap>
  <select id="selectOpen" resultMap="queryOpen">
--开户行
declare
@num int=#{openQueryParam.type},--1开户行搜索 2选取时获取
@BankName varchar(100)=#{openQueryParam.bankName},
@BankDetailAuto bigint = #{openQueryParam.bankDetailAuto},
@PageCount int=0,--分页总数可默认
@PageSize int =#{openQueryParam.pageSize},--每页多少条数据
@PageIndex int=#{openQueryParam.pageIndex}--当前要求的页码索引
    if(@num = 1)
    BEGIN
    declare @Count int --记录的总数
    declare @min int,@max int
    begin
    select @Count=count(*) from BankType a
    left join BankDetail b on b.BankType=a.BankType
    where (b.BankName like '%'+@BankName+'%' and @num=1)

    set @PageCount=(@Count+@PageSize-1)/@PageSize
    set @min=(@PageIndex-1)*@PageSize+1
    set @max=(@PageSize*@PageIndex)

    select
    ROW_NUMBER() OVER(ORDER BY b.BankName collate chinese_PRC_CS_AS_KS_WS) as sno,a.BankNameT,a.BankType,b.BankName,b.BankDetail_Auto
    into #a
    from
    BankType a
    left join BankDetail b on b.BankType=a.BankType
    where (b.BankName like '%'+@BankName+'%' and @num=1)

    select BankNameT,BankType,BankName,BankDetail_Auto from #a where sno between @min and @max order by BankNameT
    drop table #a
    end
    END

    if(@num=2)
    begin
    select
    a.BankNameT,a.BankType,b.BankName,b.BankDetail_Auto
    from
    BankType a
    left join BankDetail b on b.BankType=a.BankType
    where (b.BankDetail_Auto = @BankDetailAuto and @num=2)
    end
  </select>


</mapper>
